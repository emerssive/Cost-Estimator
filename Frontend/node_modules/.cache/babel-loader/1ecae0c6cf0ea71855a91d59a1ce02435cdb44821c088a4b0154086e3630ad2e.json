{"ast":null,"code":"var _jsxFileName = \"/home/muhammadb/Studies/Internship/Cost Estimator/Frontend/src/ResultsTable.js\";\nimport React from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { Document, Packer, Paragraph, Table, TableCell, TableRow } from 'docx';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultsTable({\n  estimates\n}) {\n  // Export to PDF\n  const exportToPDF = () => {\n    const doc = new jsPDF();\n    doc.text('Project Task Details', 10, 10);\n    autoTable(doc, {\n      head: [['Task', 'Subtask', 'Development Hours', 'Comments/Notes']],\n      body: estimates.tasks.flatMap(task => task.subtasks.map(({\n        subtask,\n        hours,\n        comments\n      }) => [task.task, subtask, `${hours} hours`, comments || 'N/A']))\n    });\n    doc.save('Project_Estimates.pdf');\n  };\n\n  // Export to DOCX\n  const exportToDOCX = () => {\n    const rows = estimates.tasks.flatMap(task => task.subtasks.map(({\n      subtask,\n      hours,\n      comments\n    }) => {\n      return new TableRow({\n        children: [new TableCell({\n          children: [new Paragraph(task.task)]\n        }), new TableCell({\n          children: [new Paragraph(subtask)]\n        }), new TableCell({\n          children: [new Paragraph(`${hours} hours`)]\n        }), new TableCell({\n          children: [new Paragraph(comments || 'N/A')]\n        })]\n      });\n    }));\n    const doc = new Document({\n      sections: [{\n        children: [new Paragraph({\n          text: 'Project Task Details',\n          heading: 'Heading1'\n        }), new Table({\n          rows: rows\n        })]\n      }]\n    });\n    Packer.toBlob(doc).then(blob => {\n      saveAs(blob, 'Project_Estimates.docx');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Project Task Estimates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of Tasks: \", estimates.summary.num_tasks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of Subtasks: \", estimates.summary.num_subtasks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Estimated Hours: \", estimates.summary.total_hours]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Development Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Comments/Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: estimates.tasks.map((task, taskIndex) => task.subtasks.map(({\n          subtask,\n          hours,\n          comments\n        }, subtaskIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: subtask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${hours} hours`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: comments || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this)]\n        }, `${taskIndex}-${subtaskIndex}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToPDF,\n        children: \"Export to PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToDOCX,\n        children: \"Export to DOCX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","jsPDF","autoTable","Document","Packer","Paragraph","Table","TableCell","TableRow","saveAs","jsxDEV","_jsxDEV","ResultsTable","estimates","exportToPDF","doc","text","head","body","tasks","flatMap","task","subtasks","map","subtask","hours","comments","save","exportToDOCX","rows","children","sections","heading","toBlob","then","blob","fileName","_jsxFileName","lineNumber","columnNumber","summary","num_tasks","num_subtasks","total_hours","taskIndex","subtaskIndex","onClick","_c","$RefreshReg$"],"sources":["/home/muhammadb/Studies/Internship/Cost Estimator/Frontend/src/ResultsTable.js"],"sourcesContent":["import React from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { Document, Packer, Paragraph, Table, TableCell, TableRow } from 'docx';\nimport { saveAs } from 'file-saver';\n\nfunction ResultsTable({ estimates }) {\n    // Export to PDF\n    const exportToPDF = () => {\n        const doc = new jsPDF();\n        doc.text('Project Task Details', 10, 10);\n        autoTable(doc, {\n            head: [['Task', 'Subtask', 'Development Hours', 'Comments/Notes']],\n            body: estimates.tasks.flatMap((task) => \n                task.subtasks.map(({ subtask, hours, comments }) => [\n                    task.task,\n                    subtask,\n                    `${hours} hours`,\n                    comments || 'N/A',\n                ])\n            ),\n        });\n        doc.save('Project_Estimates.pdf');\n    };\n\n    // Export to DOCX\n    const exportToDOCX = () => {\n        const rows = estimates.tasks.flatMap((task) =>\n            task.subtasks.map(({ subtask, hours, comments }) => {\n                return new TableRow({\n                    children: [\n                        new TableCell({ children: [new Paragraph(task.task)] }),\n                        new TableCell({ children: [new Paragraph(subtask)] }),\n                        new TableCell({ children: [new Paragraph(`${hours} hours`)] }),\n                        new TableCell({ children: [new Paragraph(comments || 'N/A')] }),\n                    ],\n                });\n            })\n        );\n\n        const doc = new Document({\n            sections: [\n                {\n                    children: [\n                        new Paragraph({ text: 'Project Task Details', heading: 'Heading1' }),\n                        new Table({\n                            rows: rows,\n                        }),\n                    ],\n                },\n            ],\n        });\n\n        Packer.toBlob(doc).then((blob) => {\n            saveAs(blob, 'Project_Estimates.docx');\n        });\n    };\n\n    return (\n        <div>\n            <h2>Project Task Estimates</h2>\n\n            {/* Display Summary */}\n            <div>\n                <h3>Summary</h3>\n                <p>Number of Tasks: {estimates.summary.num_tasks}</p>\n                <p>Number of Subtasks: {estimates.summary.num_subtasks}</p>\n                <p>Total Estimated Hours: {estimates.summary.total_hours}</p>\n            </div>\n\n            {/* Render Tasks and Subtasks */}\n            <table>\n                <thead>\n                    <tr>\n                        <th>Task</th>\n                        <th>Subtask</th>\n                        <th>Development Hours</th>\n                        <th>Comments/Notes</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {estimates.tasks.map((task, taskIndex) =>\n                        task.subtasks.map(({ subtask, hours, comments }, subtaskIndex) => (\n                            <tr key={`${taskIndex}-${subtaskIndex}`}>\n                                <td>{task.task}</td>\n                                <td>{subtask}</td>\n                                <td>{`${hours} hours`}</td>\n                                <td>{comments || 'N/A'}</td>\n                            </tr>\n                        ))\n                    )}\n                </tbody>\n            </table>\n\n            {/* Export Buttons */}\n            <div>\n                <button onClick={exportToPDF}>Export to PDF</button>\n                <button onClick={exportToDOCX}>Export to DOCX</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ResultsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}