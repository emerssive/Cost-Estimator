{"ast":null,"code":"var _jsxFileName = \"/home/muhammadb/Studies/Internship/Cost Estimator/Frontend/src/ResultsTable.js\";\nimport React from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { Document, Packer, Paragraph, Table, TableCell, TableRow } from 'docx';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultsTable({\n  estimates\n}) {\n  // Export to PDF\n  const exportToPDF = () => {\n    const doc = new jsPDF();\n    doc.text('Project Task Details', 10, 10);\n    autoTable(doc, {\n      head: [['Task', 'Subtask', 'Development Hours', 'Comments/Notes']],\n      body: estimates.flatMap(task => task.subtasks.map(({\n        subtask,\n        hours,\n        comments\n      }) => [task.task, subtask, `${hours} hours`, comments || 'N/A']))\n    });\n    doc.save('Project_Estimates.pdf');\n  };\n\n  // Export to DOCX\n  const exportToDOCX = () => {\n    const rows = estimates.flatMap(task => task.subtasks.map(({\n      subtask,\n      hours,\n      comments\n    }) => {\n      return new TableRow({\n        children: [new TableCell({\n          children: [new Paragraph(task.task)]\n        }), new TableCell({\n          children: [new Paragraph(subtask)]\n        }), new TableCell({\n          children: [new Paragraph(`${hours} hours`)]\n        }), new TableCell({\n          children: [new Paragraph(comments || 'N/A')]\n        })]\n      });\n    }));\n    const doc = new Document({\n      sections: [{\n        children: [new Paragraph({\n          text: 'Project Task Details',\n          heading: 'Heading1'\n        }), new Table({\n          rows: rows\n        })]\n      }]\n    });\n    Packer.toBlob(doc).then(blob => {\n      saveAs(blob, 'Project_Estimates.docx');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Project Task Estimates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Development Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Comments/Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: estimates.map((task, taskIndex) => task.subtasks.map(({\n          subtask,\n          hours,\n          comments\n        }, subtaskIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: subtask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${hours} hours`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: comments || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)]\n        }, `${taskIndex}-${subtaskIndex}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToPDF,\n        children: \"Export to PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToDOCX,\n        children: \"Export to DOCX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","jsPDF","autoTable","Document","Packer","Paragraph","Table","TableCell","TableRow","saveAs","jsxDEV","_jsxDEV","ResultsTable","estimates","exportToPDF","doc","text","head","body","flatMap","task","subtasks","map","subtask","hours","comments","save","exportToDOCX","rows","children","sections","heading","toBlob","then","blob","fileName","_jsxFileName","lineNumber","columnNumber","taskIndex","subtaskIndex","onClick","_c","$RefreshReg$"],"sources":["/home/muhammadb/Studies/Internship/Cost Estimator/Frontend/src/ResultsTable.js"],"sourcesContent":["import React from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { Document, Packer, Paragraph, Table, TableCell, TableRow } from 'docx';\nimport { saveAs } from 'file-saver';\n\nfunction ResultsTable({ estimates }) {\n    // Export to PDF\n    const exportToPDF = () => {\n        const doc = new jsPDF();\n        doc.text('Project Task Details', 10, 10);\n        autoTable(doc, {\n            head: [['Task', 'Subtask', 'Development Hours', 'Comments/Notes']],\n            body: estimates.flatMap((task) => \n                task.subtasks.map(({ subtask, hours, comments }) => [\n                    task.task,\n                    subtask,\n                    `${hours} hours`,\n                    comments || 'N/A',\n                ])\n            ),\n        });\n        doc.save('Project_Estimates.pdf');\n    };\n\n    // Export to DOCX\n    const exportToDOCX = () => {\n        const rows = estimates.flatMap((task) =>\n            task.subtasks.map(({ subtask, hours, comments }) => {\n                return new TableRow({\n                    children: [\n                        new TableCell({ children: [new Paragraph(task.task)] }),\n                        new TableCell({ children: [new Paragraph(subtask)] }),\n                        new TableCell({ children: [new Paragraph(`${hours} hours`)] }),\n                        new TableCell({ children: [new Paragraph(comments || 'N/A')] }),\n                    ],\n                });\n            })\n        );\n\n        const doc = new Document({\n            sections: [\n                {\n                    children: [\n                        new Paragraph({ text: 'Project Task Details', heading: 'Heading1' }),\n                        new Table({\n                            rows: rows,\n                        }),\n                    ],\n                },\n            ],\n        });\n\n        Packer.toBlob(doc).then((blob) => {\n            saveAs(blob, 'Project_Estimates.docx');\n        });\n    };\n\n    return (\n        <div>\n            <h2>Project Task Estimates</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Task</th>\n                        <th>Subtask</th>\n                        <th>Development Hours</th>\n                        <th>Comments/Notes</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {estimates.map((task, taskIndex) =>\n                        task.subtasks.map(({ subtask, hours, comments }, subtaskIndex) => (\n                            <tr key={`${taskIndex}-${subtaskIndex}`}>\n                                <td>{task.task}</td>\n                                <td>{subtask}</td>\n                                <td>{`${hours} hours`}</td>\n                                <td>{comments || 'N/A'}</td>\n                            </tr>\n                        ))\n                    )}\n                </tbody>\n            </table>\n            <div>\n                <button onClick={exportToPDF}>Export to PDF</button>\n                <button onClick={exportToDOCX}>Export to DOCX</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ResultsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}